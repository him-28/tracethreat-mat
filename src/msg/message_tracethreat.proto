/*
* Copyright 2014 Chatsiri Rattana.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/*  Titles			                                          Authors	         Date
 * -Tracethreat internal message                           R.Chatsiri       25/10/2014
 * -Request and Response                                   R.Chatsiri       13/02/2015
 */

package scan_threat;

option cc_generic_services = true;

message InfectedFileInfo{

	  enum EncodeType{
			MD5        = 1;
			MD5_HEADER = 2;
			MD5_BODY   = 3;
		  SHA_1      = 4;
			SHA_256    = 5;
			SSDEEP     = 6;
		}

		enum FileType{
				PE 			= 1;
				ELF 		= 2;
				PROCESS = 3;
		}

	
	enum StatusResult{
		POSITIVE =  1;
		NEGATIVE =  2;
	}


	optional bytes uuid = 1;	
  optional bytes machine_name = 2;
	optional bytes ip = 3;
 

	optional EncodeType encode_sig_type = 4;
	optional bytes file_name = 5;
	optional bytes file_type = 6;
	optional StatusResult status_result = 7;
  optional bytes virus_name = 8;
  optional bytes binary  = 9;

}


message InfectedFileInfoRequest{

	  enum EncodeType{
			MD5        = 1;
			MD5_HEADER = 2;
			MD5_BODY   = 3;
		  SHA_1      = 4;
			SHA_256    = 5;
			SSDEEP     = 6;
		}

		enum FileType{
				PE 			= 1;
				ELF 		= 2;
				PROCESS = 3;
		}

	
	enum StatusResult{
		POSITIVE =  1;
		NEGATIVE =  2;
	}


	optional bytes uuid = 1;	
  optional bytes machine_name = 2;
	optional bytes ip = 3;
 

	optional EncodeType encode_sig_type = 4;
	optional bytes file_name = 5;
	optional bytes file_type = 6;
	optional StatusResult status_result = 7;
  optional bytes virus_name = 8;
  optional bytes binary  = 9;
}



message InfectedFileInfoResponse{

	  enum EncodeType{
			MD5        = 1;
			MD5_HEADER = 2;
			MD5_BODY   = 3;
		  SHA_1      = 4;
			SHA_256    = 5;
			SSDEEP     = 6;
		}

		enum FileType{
				PE 			= 1;
				ELF 		= 2;
				PROCESS = 3;
		}

	
	enum StatusResult{
		POSITIVE =  1;
		NEGATIVE =  2;
	}


	optional bytes uuid = 1;	
  optional bytes machine_name = 2;
	optional bytes ip = 3;
 

	optional EncodeType encode_sig_type = 4;
	optional bytes file_name = 5;
	optional bytes file_type = 6;
	optional StatusResult status_result = 7;
  optional bytes virus_name = 8;
  optional bytes binary  = 9;

}

service InfectedFileInfoService{

	rpc InfectedFileInfo (InfectedFileInfoRequest) returns (InfectedFileInfoResponse);
	
}

