#ifndef COMPILER_SIGCATEGORY_MALWARE__HPP
#define COMPILER_SIGCATEGORY_MALWARE__HPP



struct SigDescription{	
  size_t      size;
	char        sig;
  uint64_t    end_index;
	const uint8_t     type; 	
};

template<typename SigDescription>
class sigcategoty{

	public:
		virtual  char * get_sig()const = 0;
		virtual  std::vector<igDescription> &  detected_type_sig(SigDescription * mal_descp) = 0;
		virtual  bool  send2memory(SigDescription * sig_descp) = 0;
};

template<typename SigDescription>
class  sigcategory_malware : public sigcategoty<SigDescription>{

public:
		 

private:
	MalwareDescription * mal_descp;

};


#endif /* COMPILER_SIGCATEGORY_MALWARE__HPP */
