//#ifndef INTERNET_SECURITY_AES_ENCRYPTION_HPP
//#define INTERNET_SECURITY_AES_ENCRYPTION_HPP

#include "internet/security/encryption.hpp"
#include "internet/security/aes_encryption.hpp"
//#include "internet/security/aes_controller.hpp"

namespace internet
{

    namespace security
    {
        internet::security::encryption_controller<internet::security::aes_cbc>& 
				aes_encryption::get_encryption()
        {
            return *aes_;
        }


        bool aes_encryption::initial_engine()
        {
            return aes_->initial_engine();
        }

        internet::security::aes_cbc *
        aes_encryption::initial_key(std::string ip, std::string uuid)
        {
            return aes_->initial_key(ip, uuid);
        }

        bool aes_encryption::filter_key(const char *ip, const char *uuid)
        {
            return aes_->filter_key(ip, uuid);
        }

        bool aes_encryption::encryption_msgs(const char *msg, int msg_length)
        {
            return aes_->encryption_msgs(msg, msg_length, enc_type);
        }

        bool aes_encryption::decryption_msgs(const char *msg, int msg_length)
        {
            if(enc_type == NULL)
                return false;

            return aes_->decryption_msgs(msg, msg_length, enc_type);
        }//decryption

        //template class aes_encryption::get_encryption<typename EncryptType = aes_cbc>;

        //REGISTER_ENCRYPTION(aes_encryption);


    }//security

}//internet

//#endif /* INTERNET_SECURITY_AES_ENCRYPTION_HPP */
